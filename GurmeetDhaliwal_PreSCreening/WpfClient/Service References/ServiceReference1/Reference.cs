//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CAr", Namespace="http://schemas.datacontract.org/2004/07/GurmeetDhaliwal_PreSCreening")]
    [System.SerializableAttribute()]
    public partial class CAr : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufactureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Release_YearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeatingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Make {
            get {
                return this.MakeField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeField, value) != true)) {
                    this.MakeField = value;
                    this.RaisePropertyChanged("Make");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacture {
            get {
                return this.ManufactureField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufactureField, value) != true)) {
                    this.ManufactureField = value;
                    this.RaisePropertyChanged("Manufacture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Release_Year {
            get {
                return this.Release_YearField;
            }
            set {
                if ((this.Release_YearField.Equals(value) != true)) {
                    this.Release_YearField = value;
                    this.RaisePropertyChanged("Release_Year");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Seating {
            get {
                return this.SeatingField;
            }
            set {
                if ((this.SeatingField.Equals(value) != true)) {
                    this.SeatingField = value;
                    this.RaisePropertyChanged("Seating");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICarService")]
    public interface ICarService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/addCar", ReplyAction="http://tempuri.org/ICarService/addCarResponse")]
        void addCar(string manufacure, string make, string color, System.DateTime release_year, int seating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/addCar", ReplyAction="http://tempuri.org/ICarService/addCarResponse")]
        System.Threading.Tasks.Task addCarAsync(string manufacure, string make, string color, System.DateTime release_year, int seating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/getAllCars", ReplyAction="http://tempuri.org/ICarService/getAllCarsResponse")]
        WpfClient.ServiceReference1.CAr[] getAllCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/getAllCars", ReplyAction="http://tempuri.org/ICarService/getAllCarsResponse")]
        System.Threading.Tasks.Task<WpfClient.ServiceReference1.CAr[]> getAllCarsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarServiceChannel : WpfClient.ServiceReference1.ICarService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarServiceClient : System.ServiceModel.ClientBase<WpfClient.ServiceReference1.ICarService>, WpfClient.ServiceReference1.ICarService {
        
        public CarServiceClient() {
        }
        
        public CarServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void addCar(string manufacure, string make, string color, System.DateTime release_year, int seating) {
            base.Channel.addCar(manufacure, make, color, release_year, seating);
        }
        
        public System.Threading.Tasks.Task addCarAsync(string manufacure, string make, string color, System.DateTime release_year, int seating) {
            return base.Channel.addCarAsync(manufacure, make, color, release_year, seating);
        }
        
        public WpfClient.ServiceReference1.CAr[] getAllCars() {
            return base.Channel.getAllCars();
        }
        
        public System.Threading.Tasks.Task<WpfClient.ServiceReference1.CAr[]> getAllCarsAsync() {
            return base.Channel.getAllCarsAsync();
        }
    }
}
